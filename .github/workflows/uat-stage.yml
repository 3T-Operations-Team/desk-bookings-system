name: Run UAT Stage

on:
  workflow_dispatch:
    inputs:
      acceptance-version:
        type: string
        required: true
        description: "Enter accepted version to deploy in UAT"
      rc-version:
        type: string
        required: true
        description: "Enter rc version to tag repo and image"

jobs:
#  run-uat-deploy:
#    uses: ./.github/workflows/release-stage.yml
#    secrets: inherit
#    with:
#      EB_APP_BE: ${{ vars.EB_APP_BE }}
#      EB_APP_FE: ${{ vars.EB_APP_FE }}
#      EB_ENV_FE: ${{ vars.EB_ENV_UAT_FE }}
#      EB_ENV_BE: ${{ vars.EB_ENV_UAT_BE }}
#      TAG: ${{ inputs.acceptance-version }}
#
#  # presume that some test are run from manual testing and approve a tag
#  approve-pre-release-tag-be:
#    needs:
#      - run-uat-deploy
#    uses: 3T-Operations-Team/desk-bookings-system-tests/.github/workflows/update-tag.yml@main
#    with:
#      image-tag: ${{ inputs.acceptance-version }}
#      new-tag: pre-release
#      IMAGE_NAME: ghcr.io/3t-operations-team/desk-bookings-be
#    secrets: inherit
#  approve-pre-release-tag-fe:
#    needs:
#      - run-uat-deploy
#    uses: 3T-Operations-Team/desk-bookings-system-tests/.github/workflows/update-tag.yml@main
#    with:
#      image-tag: ${{ inputs.acceptance-version }}
#      new-tag: pre-release
#      IMAGE_NAME: ghcr.io/3t-operations-team/desk-bookings-fe
#    secrets: inherit
  test-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
#      - name: Create or Update Release
#        env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#            TAG_NAME="${{ github.event.inputs.rc-version }}"
#            RELEASE_NAME="Release ${TAG_NAME}"
#            BODY="Automatic release for tag ${TAG_NAME}"
#
#            # Check if release exists for the tag
#            if gh release view "$TAG_NAME" > /dev/null 2>&1; then
#            echo "Release $TAG_NAME exists. Updating..."
#            gh release edit "$TAG_NAME" --title "$RELEASE_NAME" --notes "$BODY"
#            else
#            echo "Creating release $TAG_NAME"
#            gh release create "$TAG_NAME" --title "$RELEASE_NAME" --notes "$BODY"
#            fi
      - name: Create Release.txt
        run: |
            echo "This is a test release" >> Release.txt
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.rc_version }}
          body: "Automatic release for ${{ inputs.rc_version }}"
          files: Release.txt
          repository: 3T-Operations-Team/desk-bookings-fe
          token: '${{ secrets.GITHUB_TOKEN }}'

