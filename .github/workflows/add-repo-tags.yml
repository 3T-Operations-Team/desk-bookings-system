name: Add Repo tag
on:
  workflow_call:
    inputs:
      to-version:
        type: string
        required : true
        description: "Tag to update repo"
      from-version:
        type: string
        required: true
        description: "Enter accepted version to deploy in UAT"

jobs:
  approve-pre-release-tag-be:
    uses: 3T-Operations-Team/desk-bookings-system-tests/.github/workflows/update-tag.yml@main
    with:
      image-tag: ${{ inputs.from-version }}
      new-tag: ${{ inputs.to-version }}
      IMAGE_NAME: ghcr.io/3t-operations-team/desk-bookings-be
    secrets: inherit
  approve-pre-release-tag-fe:
    uses: 3T-Operations-Team/desk-bookings-system-tests/.github/workflows/update-tag.yml@main
    with:
      image-tag: ${{ inputs.from-version }}
      new-tag: ${{ inputs.to-version }}
      IMAGE_NAME: ghcr.io/3t-operations-team/desk-bookings-fe
    secrets: inherit
  add-release-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          repository: 3T-Operations-Team/desk-bookings-fe
          path: desk-bookings-be

      - name: Create or Update Release
        working-directory: desk-bookings-fe
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
        run: |
          TAG_NAME="${{ inputs.to-version }}"
          RELEASE_NAME="Release ${TAG_NAME}"
          BODY="Automatic release for tag ${TAG_NAME}"
          
          # Check if release exists for the tag
          if gh release view "$TAG_NAME" > /dev/null 2>&1; then
            echo "Release $TAG_NAME exists. Updating..."
            gh release edit "$TAG_NAME" --title "$RELEASE_NAME" --notes "$BODY"
          else
            echo "Creating release $TAG_NAME"
            gh release create "$TAG_NAME" --title "$RELEASE_NAME" --notes "$BODY"
          fi

  add-release-backend:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          repository: 3T-Operations-Team/desk-bookings-be
          path: desk-bookings-be

      - name: Create or Update Release
        working-directory: desk-bookings-fe
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
        run: |
          TAG_NAME="${{ inputs.to-version }}"
          RELEASE_NAME="Release ${TAG_NAME}"
          BODY="Automatic release for tag ${TAG_NAME}"

          # Check if release exists for the tag
          if gh release view "$TAG_NAME" > /dev/null 2>&1; then
            echo "Release $TAG_NAME exists. Updating..."
            gh release edit "$TAG_NAME" --title "$RELEASE_NAME" --notes "$BODY"
          else
            echo "Creating release $TAG_NAME"
            gh release create "$TAG_NAME" --title "$RELEASE_NAME" --notes "$BODY"
          fi
